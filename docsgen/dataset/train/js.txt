[INS]
Generate top level function documentation summarizing the js code
[/INS]

[INPUT]
function addNumbers(a, b) {
    return a + b;
}
[/INPUT]

[RESPONSE]
/**
 * Adds two numbers together.
 * @param {number} a - The first number.
 * @param {number} b - The second number.
 * @returns {number} The sum of the two numbers.
 * @example
 * addNumbers(3, 5); // 8
 */
[/RESPONSE]

/**
 * Converts Celsius to Fahrenheit.
// Parameters:
// - celsius: Temperature in Celsius.
// Returns:
// - The temperature converted to Fahrenheit.
// Example:
//     const tempF = celsiusToFahrenheit(0); // 32
 */
function celsiusToFahrenheit(celsius) {
    return (celsius * 9/5) + 32;
}

/**
 * Checks if a string is a palindrome.
// Parameters:
// - str: The string to check.
// Returns:
// - True if the string is a palindrome, false otherwise.
// Example:
//     const isPalin = isPalindrome("racecar"); // true
 */
function isPalindrome(str) {
    const reversed = str.split('').reverse().join('');
    return str === reversed;
}

/**
 * Fetches user data from an API.
// Parameters:
// - userId: The ID of the user to fetch.
// Returns:
// - A promise that resolves with the user data.
// Example:
//     fetchUser(1).then(data => console.log(data));
 */
async function fetchUser(userId) {
    const response = await fetch(`https://jsonplaceholder.typicode.com/users/${userId}`);
    if (!response.ok) throw new Error('Network response was not ok');
    return await response.json();
}

/**
 * Finds duplicates in an array of strings.
// Parameters:
// - arr: An array of strings.
// Returns:
// - An array of duplicates found in the input array.
// Example:
//     const duplicates = findDuplicates(['apple', 'banana', 'apple', 'orange']); // ['apple']
 */
function findDuplicates(arr) {
    const seen = new Set();
    const duplicates = new Set();
    arr.forEach(item => {
        if (seen.has(item)) {
            duplicates.add(item);
        }
        seen.add(item);
    });
    return [...duplicates];
}
